#include<stdio.h>
#include<pthread.h>
#include<tgmath.h>
void *factorial(void *p);
void *reverse(void *p);
int fact(int n);


int main(){
pthread_t tid1;
pthread_t tid2;
pthread_attr_t attr; // set of thread attributes
 
//get the default attributes
pthread_attr_init(&attr);
pthread_create(&tid1,&attr,factorial,NULL);
pthread_join(tid1,NULL); 
pthread_create(&tid2,&attr,reverse,NULL);
pthread_join(tid2,NULL); 
}

int fact(int n){
if(n==0 || n==1)
return 1;
else 
return n*fact(n-1);
}

int rev(int n)
{
int d,s=0;
while(n>0){
d=n%10;
s=(s*10)+d;
n=n/10;
}
return s;
}

void *factorial(void *p){
int i,num1;
printf("Thread 1 (factorial) : ");
printf("Enter Number: ");
scanf("%d",&num1);
printf("Factorial is: %d\n",fact(num1));
pthread_exit(0);
 
}

void *reverse(void *p){
int i,num2;
printf("Thread 2 (reverse of a number) : ");
printf("enter the number to reverse");
scanf("%d",&num2);
printf("The reverse of the number given will be: %d",rev(num2));
pthread_exit(0);
}
